{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 [\
    \{\
        "id": "16b85e1e72c04df5",\
        "type": "tab",\
        "label": "Flow 5",\
        "disabled": false,\
        "info": "",\
        "env": []\
    \},\
    \{\
        "id": "9d8f8978ab1241fd",\
        "type": "serial in",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "serial": "fbb3edcd19389c0b",\
        "x": 210,\
        "y": 340,\
        "wires": [\
            [\
                "519010c4be771eea"\
            ]\
        ]\
    \},\
    \{\
        "id": "5751ff935754aa4a",\
        "type": "ui_text",\
        "z": "16b85e1e72c04df5",\
        "group": "2f6e8bab.46edd4",\
        "order": 1,\
        "width": 0,\
        "height": 0,\
        "name": "",\
        "label": "Voltage Upv (V)",\
        "format": "\{\{msg.payload\}\}",\
        "layout": "row-spread",\
        "className": "",\
        "x": 1000,\
        "y": 120,\
        "wires": []\
    \},\
    \{\
        "id": "bb4cc369241f4929",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "Ipanel=f(Upanel)",\
        "func": "//var Ipanneau=0;\\n//var Upanneau=msg.topic; //est d\'e9termin\'e9 \'e0 partir du potentiom\'e8tre\\n\\nvar startmoment = context.get(\\"startmoment\\")\\nvar chartdata = context.get(\\"chartdata\\") || []\\n\\nvar Isc= 3.8;\\nvar Vco=21.1;\\n\\nvar Kicc =0.024;\\nvar Kvco =-0.08;\\n\\n\\n//var valTemperature=1+273;\\n//var valEclairement=1750;\\n\\nvar T_STC = 298;\\nvar G_STC = 1000;\\n\\nvar q = 10**(-19);\\nvar K = 10**(-23);\\nvar a = 1.2; \\n\\nvar Ns = 36;\\nvar Np = 4\\n\\nvar Rs = 0.008; \\nvar Rsh = 1000; \\n\\n\\n\\nvar msgCourant=\{\};\\nvar msgTension=\{\};\\nvar valTemperature=\{\};\\nvar valEclairement=\{\};\\n\\nmsgTension.payload=msg.payload.V \\n\\n\\nvalTemperature.payload=msg.payload.T\\nvalEclairement.payload=msg.payload.Ir\\nmsgCourant.payload=3.8;\\n \\nif ((msgCourant.payload >= 0) && ((msgTension.payload >= 0) && (msgTension.payload <= Vco))) \{\\n    \\n    msgCourant.payload = ((Isc + Kicc * (valTemperature.payload - T_STC)) * (valEclairement.payload / G_STC)) - ((Isc + Kicc * (valTemperature.payload - T_STC)) / (Math.exp(q * (Vco + Kvco * (valTemperature.payload - T_STC)) / (a * K * valTemperature.payload * Ns)) - 1)) * (Math.exp(q * (msgTension.payload + Rs * msgCourant.payload) / (a * K * valTemperature.payload * Ns)) - 1) - ((msgTension.payload + Rs * msgCourant.payload) / (Rsh))\\n\}\\n\\n\\n  //conditions pour ne pas avoir un courant n\'e9gatif\\nif ((msgTension.payload > 21.9) || (msgCourant.payload < 0)) \{\\n    msgCourant.payload = 0\\n\}\\n\\nif(msg.topic === \\"reset\\" )\{\\n startmoment = undefined;\\n context.set(\\"startmoment\\",startmoment)\\n context.set(\\"chartdata\\",[]);\\n msg.payload = []\\n return msg\\n\}\\n\\n\\n// create chart point object\\nvar ob = \{x:msgTension.payload, y:msgCourant.payload\}   //le courant en ordonn\'e9es, la tension en abcisse\\n// collect datapoints\\nchartdata.push(ob)\\n    \\n//store data set\\ncontext.set(\\"chartdata\\",chartdata);\\n    \\n//pour tracer la carct\'e9ristique \\nmsg.payload = [\{\\n\\"series\\": [\\"A\\"],\\n\\"data\\": [chartdata],\\n\\"labels\\": [\\"\\"]\\n\}]\\n    \\ncontext.set(\\"startmoment\\",startmoment)\\n\\nmsg.topic==\\"THEORETICAL\\";    \\nreturn msg;\\n",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 680,\
        "y": 480,\
        "wires": [\
            [\
                "6f85b241dd18fc06"\
            ]\
        ]\
    \},\
    \{\
        "id": "6f85b241dd18fc06",\
        "type": "ui_chart",\
        "z": "16b85e1e72c04df5",\
        "name": "Ipanel=f(Upanel)",\
        "group": "ea91e3bd1a163f34",\
        "order": 1,\
        "width": 0,\
        "height": 0,\
        "label": "Ipanel=f(Upanel)",\
        "chartType": "line",\
        "legend": "true",\
        "xformat": "HH:mm:ss",\
        "interpolate": "linear",\
        "nodata": "",\
        "dot": false,\
        "ymin": "",\
        "ymax": "",\
        "removeOlder": 1,\
        "removeOlderPoints": "",\
        "removeOlderUnit": "3600",\
        "cutout": 0,\
        "useOneColor": false,\
        "useUTC": false,\
        "colors": [\
            "#1f77b4",\
            "#aec7e8",\
            "#ff7f0e",\
            "#2ca02c",\
            "#98df8a",\
            "#d62728",\
            "#ff9896",\
            "#9467bd",\
            "#c5b0d5"\
        ],\
        "outputs": 1,\
        "useDifferentColor": false,\
        "className": "",\
        "x": 1020,\
        "y": 480,\
        "wires": [\
            []\
        ]\
    \},\
    \{\
        "id": "519010c4be771eea",\
        "type": "json",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "property": "payload",\
        "action": "",\
        "pretty": false,\
        "x": 430,\
        "y": 340,\
        "wires": [\
            [\
                "b9c70d31c2cd06b7",\
                "8fb178ad528b05ab",\
                "d2c11ea1bd16826c",\
                "2d366bf6e89644de",\
                "34a907da823799e7",\
                "950347d640c59f15",\
                "f2e60e84f56a084b",\
                "bb4cc369241f4929"\
            ]\
        ]\
    \},\
    \{\
        "id": "cfc653f0c91cd8d8",\
        "type": "ui_button",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "group": "ea91e3bd1a163f34",\
        "order": 2,\
        "width": 0,\
        "height": 0,\
        "passthru": false,\
        "label": "ResetI",\
        "tooltip": "",\
        "color": "",\
        "bgcolor": "",\
        "className": "",\
        "icon": "Reset",\
        "payload": "[ ]",\
        "payloadType": "json",\
        "topic": "reset",\
        "topicType": "str",\
        "x": 470,\
        "y": 480,\
        "wires": [\
            [\
                "bb4cc369241f4929"\
            ]\
        ]\
    \},\
    \{\
        "id": "f2e60e84f56a084b",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "Ppanel=f(Upanel)",\
        "func": "var startmoment = context.get(\\"startmoment\\")\\nvar chartdata = context.get(\\"chartdata\\") || []\\n\\nvar Isc= 3.8;\\nvar Vco=21.1;\\n\\nvar Kicc =0.024;\\nvar Kvco =-0.08;\\n\\nvar T_STC = 298;\\nvar G_STC = 1000;\\n\\nvar q = 10**(-19);\\nvar K = 10**(-23);\\nvar a = 1.2; \\n\\nvar Ns = 36;\\nvar Np = 4\\n\\nvar Rs = 0.008; \\nvar Rsh = 1000; \\n\\n\\n\\nvar msgCourant=\{\};\\nvar msgTension=\{\};\\nvar msgPuissance=\{\};\\nvar valTemperature=\{\};\\nvar valEclairement=\{\};\\n\\nmsgTension.payload=msg.payload.V; \\n\\nvalTemperature.payload=msg.payload.T;\\nvalEclairement.payload=msg.payload.Ir;\\nmsgCourant.payload=3.8;\\n \\nif ((msgCourant.payload >= 0) && ((msgTension.payload >= 0) && (msgTension.payload <= Vco))) \{\\n    msgCourant.payload = ((Isc + Kicc * (valTemperature.payload - T_STC)) * (valEclairement.payload / G_STC)) - ((Isc + Kicc * (valTemperature.payload - T_STC)) / (Math.exp(q * (Vco + Kvco * (valTemperature.payload - T_STC)) / (a * K * valTemperature.payload * Ns)) - 1)) * (Math.exp(q * (msgTension.payload + Rs * msgCourant.payload) / (a * K * valTemperature.payload * Ns)) - 1) - ((msgTension.payload + Rs * msgCourant.payload) / (Rsh))\\n\}\\n\\n\\n  //conditions pour ne pas avoir un courant n\'e9gatif\\nif ((msgTension.payload > 21.9) || (msgCourant.payload < 0)) \{\\n    msgCourant.payload = 0\\n\}\\n\\nmsgPuissance.payload=msgCourant.payload*msgTension.payload\\n\\nif(msg.topic === \\"reset\\")\{\\n startmoment = undefined;\\n context.set(\\"startmoment\\",startmoment)\\n context.set(\\"chartdata\\",[]);\\n msg.payload = []\\n return msg\\n\}\\n\\n// create chart point object\\nvar ob = \{x:msgTension.payload, y:msgPuissance.payload\}   //le courant en ordonn\'e9es, la tension en abcisse\\n// collect datapoints\\nchartdata.push(ob)\\n    \\n//store data set\\ncontext.set(\\"chartdata\\",chartdata);\\n    \\n//pour tracer la carct\'e9ristique \\nmsg.payload = [\{\\n\\"series\\": [\\"A\\"],\\n\\"data\\": [chartdata],\\n\\"labels\\": [\\"\\"]\\n\}]\\n    \\ncontext.set(\\"startmoment\\",startmoment)\\n    \\nreturn msg;",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 690,\
        "y": 420,\
        "wires": [\
            [\
                "819e1fe7bfbdff1a"\
            ]\
        ]\
    \},\
    \{\
        "id": "819e1fe7bfbdff1a",\
        "type": "ui_chart",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "group": "ea91e3bd1a163f34",\
        "order": 4,\
        "width": 0,\
        "height": 0,\
        "label": "Ppanel=f(Upanel)",\
        "chartType": "line",\
        "legend": "false",\
        "xformat": "HH:mm:ss",\
        "interpolate": "linear",\
        "nodata": "",\
        "dot": false,\
        "ymin": "",\
        "ymax": "",\
        "removeOlder": 1,\
        "removeOlderPoints": "",\
        "removeOlderUnit": "3600",\
        "cutout": 0,\
        "useOneColor": false,\
        "useUTC": false,\
        "colors": [\
            "#1f77b4",\
            "#aec7e8",\
            "#ff7f0e",\
            "#2ca02c",\
            "#98df8a",\
            "#d62728",\
            "#ff9896",\
            "#9467bd",\
            "#c5b0d5"\
        ],\
        "outputs": 1,\
        "useDifferentColor": false,\
        "className": "",\
        "x": 1030,\
        "y": 420,\
        "wires": [\
            []\
        ]\
    \},\
    \{\
        "id": "a581f8717dee48cd",\
        "type": "ui_button",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "group": "ea91e3bd1a163f34",\
        "order": 5,\
        "width": 10,\
        "height": 1,\
        "passthru": false,\
        "label": "ResetP",\
        "tooltip": "",\
        "color": "",\
        "bgcolor": "",\
        "className": "",\
        "icon": "ResetP",\
        "payload": "[ ]",\
        "payloadType": "json",\
        "topic": "reset",\
        "topicType": "str",\
        "x": 460,\
        "y": 420,\
        "wires": [\
            [\
                "f2e60e84f56a084b"\
            ]\
        ]\
    \},\
    \{\
        "id": "75aaf8c1e1293899",\
        "type": "ui_text_input",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "label": "Choice",\
        "tooltip": "",\
        "group": "2f6e8bab.46edd4",\
        "order": 5,\
        "width": 0,\
        "height": 0,\
        "passthru": true,\
        "mode": "text",\
        "delay": 300,\
        "topic": "topic",\
        "sendOnBlur": true,\
        "className": "",\
        "topicType": "msg",\
        "x": 160,\
        "y": 260,\
        "wires": [\
            [\
                "8d5dfe575257d804"\
            ]\
        ]\
    \},\
    \{\
        "id": "2d366bf6e89644de",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "DisplayCurrent",\
        "func": "var startmoment = context.get(\\"startmoment\\")\\nvar chartdata = context.get(\\"chartdata\\") || []\\n\\nvar Isc= 3.8;\\nvar Vco=21.1;\\n\\nvar Kicc =0.024;\\nvar Kvco =-0.08;\\n\\nvar T_STC = 298;\\nvar G_STC = 1000;\\n\\nvar q = 10**(-19);\\nvar K = 10**(-23);\\nvar a = 1.2; \\n\\nvar Ns = 36;\\nvar Np = 4\\n\\nvar Rs = 0.008; \\nvar Rsh = 1000; \\n\\n\\n\\nvar msgCourant=\{\};\\nvar msgTension=\{\};\\nvar valTemperature=\{\};\\nvar valEclairement=\{\};\\n\\nmsgTension.payload=msg.payload.V \\nmsgCourant.payload=3.8;\\n\\nvalTemperature.payload=msg.payload.T\\nvalEclairement.payload=msg.payload.Ir\\n \\nif ((msgCourant.payload >= 0) && ((msgTension.payload >= 0) && (msgTension.payload <= Vco))) \{\\n    \\n    msgCourant.payload = ((Isc + Kicc * (valTemperature.payload - T_STC)) * (valEclairement.payload / G_STC)) - ((Isc + Kicc * (valTemperature.payload - T_STC)) / (Math.exp(q * (Vco + Kvco * (valTemperature.payload - T_STC)) / (a * K * valTemperature.payload * Ns)) - 1)) * (Math.exp(q * (msgTension.payload + Rs * msgCourant.payload) / (a * K * valTemperature.payload * Ns)) - 1) - ((msgTension.payload + Rs * msgCourant.payload) / (Rsh))\\n\\n    \\n    \\n    \\n    let resCourant = (msgCourant.payload).toFixed(2);\\n    console.log(resCourant);\\n    \\n    msg.payload=resCourant;\\n    return msg\\n\}\\n\\n\\n//conditions pour ne pas avoir un courant n\'e9gatif\\nif ((msgTension.payload > 21.9) || (msgCourant.payload < 0)) \{\\n    msgCourant.payload = 0\\n    \\n    //Panneau_U.V_panneau = Vco;\\n    let resCourant = (msgCourant.payload).toFixed(2);\\n    console.log(resCourant);\\n    \\n    msg.payload=resCourant;\\n    return msg\\n\}\\n",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 680,\
        "y": 240,\
        "wires": [\
            [\
                "c5f354716465f2b4"\
            ]\
        ]\
    \},\
    \{\
        "id": "c5f354716465f2b4",\
        "type": "ui_text",\
        "z": "16b85e1e72c04df5",\
        "group": "2f6e8bab.46edd4",\
        "order": 2,\
        "width": 0,\
        "height": 0,\
        "name": "",\
        "label": "Current Ipv (A)",\
        "format": "\{\{msg.payload\}\}",\
        "layout": "row-spread",\
        "className": "",\
        "x": 1020,\
        "y": 240,\
        "wires": []\
    \},\
    \{\
        "id": "d2c11ea1bd16826c",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "DisplayPower",\
        "func": "var startmoment = context.get(\\"startmoment\\")\\nvar chartdata = context.get(\\"chartdata\\") || []\\n\\nvar Isc= 3.8;\\nvar Vco=21.1;\\n\\nvar Kicc =0.024;\\nvar Kvco =-0.08;\\n\\nvar T_STC = 298;\\nvar G_STC = 1000;\\n\\nvar q = 10**(-19);\\nvar K = 10**(-23);\\nvar a = 1.2; \\n\\nvar Ns = 36;\\nvar Np = 4\\n\\nvar Rs = 0.008; \\nvar Rsh = 1000; \\n\\n\\n\\nvar msgCourant=\{\};\\nvar msgTension=\{\};\\nvar msgPuissance=\{\};\\nvar valTemperature=\{\};\\nvar valEclairement=\{\};\\n\\nmsgTension.payload=msg.payload.V; \\nmsgCourant.payload=3.8;\\n\\nvalTemperature.payload=msg.payload.T;\\nvalEclairement.payload=msg.payload.Ir;\\n \\nif ((msgCourant.payload >= 0) && ((msgTension.payload >= 0) && (msgTension.payload <= Vco))) \{\\n    msgCourant.payload = ((Isc + Kicc * (valTemperature.payload - T_STC)) * (valEclairement.payload / G_STC)) - ((Isc + Kicc * (valTemperature.payload - T_STC)) / (Math.exp(q * (Vco + Kvco * (valTemperature.payload - T_STC)) / (a * K * valTemperature.payload * Ns)) - 1)) * (Math.exp(q * (msgTension.payload + Rs * msgCourant.payload) / (a * K * valTemperature.payload * Ns)) - 1) - ((msgTension.payload + Rs * msgCourant.payload) / (Rsh))\\n\}\\n\\n\\n  //conditions pour ne pas avoir un courant n\'e9gatif\\nif ((msgTension.payload > 21.9) || (msgCourant.payload < 0)) \{\\n    msgCourant.payload = 0\\n    //Panneau_U.V_panneau = Vco;\\n\}\\n\\nmsgPuissance.payload=msgCourant.payload*msgTension.payload\\n\\n\\nlet resPuissance = (msgPuissance.payload).toFixed(2);\\nconsole.log(resPuissance);\\n\\n\\nmsg.payload=resPuissance\\nreturn msg;",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 680,\
        "y": 180,\
        "wires": [\
            [\
                "e0ed4f662d2e3d39"\
            ]\
        ]\
    \},\
    \{\
        "id": "e0ed4f662d2e3d39",\
        "type": "ui_text",\
        "z": "16b85e1e72c04df5",\
        "group": "2f6e8bab.46edd4",\
        "order": 3,\
        "width": 0,\
        "height": 0,\
        "name": "",\
        "label": "Power Ppv (W)",\
        "format": "\{\{msg.payload\}\}",\
        "layout": "row-spread",\
        "className": "",\
        "x": 1020,\
        "y": 180,\
        "wires": []\
    \},\
    \{\
        "id": "371bf7a8aebcc393",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "maxPower",\
        "func": "let maxPuissance;\\nvar msgPuissance=\{\};\\n\\n//return msg\\nmsgPuissance.payload=msg.payload;\\n\\nfor(let i=0; i<msgPuissance.length ;i++)\{\\n    while(msgPuissance[i]>msgPuissance[i-1])\{\\n        let count;\\n        count++;\\n    \}\\n    maxPuissance=msgPuissance[i]\\n    msg.paylaod=maxPuissance\\n    return msg\\n\}\\n",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 1330,\
        "y": 100,\
        "wires": [\
            [\
                "db8d8f471fa74473"\
            ]\
        ]\
    \},\
    \{\
        "id": "db8d8f471fa74473",\
        "type": "debug",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "active": false,\
        "tosidebar": true,\
        "console": false,\
        "tostatus": false,\
        "complete": "payload",\
        "targetType": "msg",\
        "statusVal": "",\
        "statusType": "auto",\
        "x": 1510,\
        "y": 100,\
        "wires": []\
    \},\
    \{\
        "id": "b9c70d31c2cd06b7",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "IdealCharacteristic(Ipanel=f(Upanel))",\
        "func": "\\nvar startmoment = context.get(\\"startmoment\\")\\nvar chartdata = context.get(\\"chartdata\\") || []\\n\\nvar Isc= 3.8;\\nvar Vco=21.1;\\n\\nvar Kicc =0.024;\\nvar Kvco =-0.08;\\n\\nvar T_STC = 298;\\nvar G_STC = 1000;\\n\\nvar q = 10**(-19);\\nvar K = 10**(-23);\\nvar a = 1.2; \\n\\nvar Ns = 36;\\nvar Np = 4\\n\\nvar Rs = 0.008; \\nvar Rsh = 1000; \\n\\nvar msgCourantIdeal=\{\};\\nvar valTemperature=\{\};\\nvar valEclairement=\{\};\\n\\nvalTemperature.payload=msg.payload.T\\nvalEclairement.payload=msg.payload.Ir\\n\\nmsgCourantIdeal.payload=3.8;\\n\\nvar Voltage; \\n\\nfor(Voltage=0; Voltage <22 ; Voltage=Voltage+0.05)\{\\n    \\n    if ((msgCourantIdeal.payload >= 0) && ((Voltage >= 0) && (Voltage <= Vco))) \{\\n        msgCourantIdeal.payload = ((Isc + Kicc * (valTemperature.payload - T_STC)) * (valEclairement.payload / G_STC)) - ((Isc + Kicc * (valTemperature.payload - T_STC)) / (Math.exp(q * (Vco + Kvco * (valTemperature.payload - T_STC)) / (a * K * valTemperature.payload * Ns)) - 1)) * (Math.exp(q * (Voltage + Rs * msgCourantIdeal.payload) / (a * K * valTemperature.payload * Ns)) - 1) - ((Voltage + Rs * msgCourantIdeal.payload) / (Rsh))\\n    \}\\n    //conditions pour ne pas avoir un courant n\'e9gatif\\n    if ((Voltage > 21.9) || (msgCourantIdeal.payload < 0)) \{\\n        msgCourantIdeal.payload = 0\\n        Voltage=Vco\\n    \}\\n    \\n    if(msg.topic === \\"reset\\" )\{\\n     startmoment = undefined;\\n     context.set(\\"startmoment\\",startmoment)\\n     context.set(\\"chartdata\\",[]);\\n     msg.payload = []\\n     return msg\\n    \}\\n    \\n    \\n    // create chart point object\\n    var ob = \{x:Voltage, y:msgCourantIdeal.payload\}   //le courant en ordonn\'e9es, la tension en abcisse\\n    \\n    // collect datapoints\\n    chartdata.push(ob)\\n        \\n    //store data set\\n    context.set(\\"chartdata\\",chartdata);\\n        \\n    //pour tracer la carct\'e9ristique \\n    msg.payload = [\{\\n    \\"series\\": [\\"A\\"],\\n    \\"data\\": [chartdata],\\n    \\"labels\\": [\\"\\"]\\n    \}]\\n        \\n    context.set(\\"startmoment\\",startmoment)\\n    msg.topic=\\"IDEAL CHARACTERISTIC\\"; \\n    \\n\\n\}\\nreturn msg;\\n\\n \\n\\n\\n\\n\\n",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 750,\
        "y": 540,\
        "wires": [\
            [\
                "99c37f160136d921"\
            ]\
        ]\
    \},\
    \{\
        "id": "99c37f160136d921",\
        "type": "ui_chart",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "group": "ea91e3bd1a163f34",\
        "order": 7,\
        "width": 0,\
        "height": 0,\
        "label": "chart",\
        "chartType": "line",\
        "legend": "true",\
        "xformat": "HH:mm:ss",\
        "interpolate": "linear",\
        "nodata": "",\
        "dot": false,\
        "ymin": "",\
        "ymax": "",\
        "removeOlder": 1,\
        "removeOlderPoints": "",\
        "removeOlderUnit": "3600",\
        "cutout": 0,\
        "useOneColor": false,\
        "useUTC": false,\
        "colors": [\
            "#1f77b4",\
            "#aec7e8",\
            "#ff7f0e",\
            "#2ca02c",\
            "#98df8a",\
            "#d62728",\
            "#ff9896",\
            "#9467bd",\
            "#c5b0d5"\
        ],\
        "outputs": 1,\
        "useDifferentColor": false,\
        "className": "",\
        "x": 990,\
        "y": 540,\
        "wires": [\
            []\
        ]\
    \},\
    \{\
        "id": "8d5dfe575257d804",\
        "type": "serial out",\
        "z": "16b85e1e72c04df5",\
        "name": "",\
        "serial": "fbb3edcd19389c0b",\
        "x": 390,\
        "y": 260,\
        "wires": []\
    \},\
    \{\
        "id": "8fb178ad528b05ab",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "Display voltage",\
        "func": "msg.payload=msg.payload.V\\nreturn msg;",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 680,\
        "y": 120,\
        "wires": [\
            [\
                "5751ff935754aa4a"\
            ]\
        ]\
    \},\
    \{\
        "id": "34a907da823799e7",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "DisplayIrradiance",\
        "func": "msg.payload=msg.payload.Ir\\nreturn msg;",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 690,\
        "y": 300,\
        "wires": [\
            [\
                "9153ee106aaaa7bc"\
            ]\
        ]\
    \},\
    \{\
        "id": "9153ee106aaaa7bc",\
        "type": "ui_text",\
        "z": "16b85e1e72c04df5",\
        "group": "2f6e8bab.46edd4",\
        "order": 2,\
        "width": 0,\
        "height": 0,\
        "name": "",\
        "label": "Sunlight (W/m^2)",\
        "format": "\{\{msg.payload\}\}",\
        "layout": "row-spread",\
        "className": "",\
        "x": 1030,\
        "y": 300,\
        "wires": []\
    \},\
    \{\
        "id": "950347d640c59f15",\
        "type": "function",\
        "z": "16b85e1e72c04df5",\
        "name": "DisplayTemperature",\
        "func": "msg.payload=msg.payload.T\\nreturn msg;",\
        "outputs": 1,\
        "noerr": 0,\
        "initialize": "",\
        "finalize": "",\
        "libs": [],\
        "x": 700,\
        "y": 360,\
        "wires": [\
            [\
                "17ecda912958bca7"\
            ]\
        ]\
    \},\
    \{\
        "id": "17ecda912958bca7",\
        "type": "ui_text",\
        "z": "16b85e1e72c04df5",\
        "group": "2f6e8bab.46edd4",\
        "order": 2,\
        "width": 0,\
        "height": 0,\
        "name": "",\
        "label": "Temperature (K)",\
        "format": "\{\{msg.payload\}\}",\
        "layout": "row-spread",\
        "className": "",\
        "x": 1020,\
        "y": 360,\
        "wires": []\
    \},\
    \{\
        "id": "25b7d9760b4d33bf",\
        "type": "ui_spacer",\
        "z": "16b85e1e72c04df5",\
        "name": "spacer",\
        "group": "2f6e8bab.46edd4",\
        "order": 4,\
        "width": 6,\
        "height": 1\
    \},\
    \{\
        "id": "70d4b3676557e1bb",\
        "type": "ui_spacer",\
        "z": "16b85e1e72c04df5",\
        "name": "spacer",\
        "group": "ea91e3bd1a163f34",\
        "order": 3,\
        "width": 10,\
        "height": 1\
    \},\
    \{\
        "id": "fbb3edcd19389c0b",\
        "type": "serial-port",\
        "serialport": "/dev/cu.usbmodem14111",\
        "serialbaud": "230400",\
        "databits": "8",\
        "parity": "none",\
        "stopbits": "1",\
        "waitfor": "",\
        "dtr": "none",\
        "rts": "none",\
        "cts": "none",\
        "dsr": "none",\
        "newline": "\\\\n",\
        "bin": "false",\
        "out": "char",\
        "addchar": "",\
        "responsetimeout": "0"\
    \},\
    \{\
        "id": "2f6e8bab.46edd4",\
        "type": "ui_group",\
        "name": "Test",\
        "tab": "abc7cf22db8091b6",\
        "order": 1,\
        "disp": true,\
        "width": 6,\
        "collapse": false,\
        "className": ""\
    \},\
    \{\
        "id": "ea91e3bd1a163f34",\
        "type": "ui_group",\
        "name": "Caract\'e9ristiques",\
        "tab": "abc7cf22db8091b6",\
        "order": 2,\
        "disp": true,\
        "width": "10",\
        "collapse": false,\
        "className": ""\
    \},\
    \{\
        "id": "abc7cf22db8091b6",\
        "type": "ui_tab",\
        "name": "TEST3",\
        "icon": "dashboard",\
        "disabled": false,\
        "hidden": false\
    \}\
]}